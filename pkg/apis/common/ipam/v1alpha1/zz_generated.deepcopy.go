//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	ipam "github.com/Mirantis/mcc-api/pkg/apis/common/ipam/ipam"
	cloudinit "github.com/Mirantis/mcc-api/pkg/apis/common/ipam/ipam/cloudinit"
	types "github.com/Mirantis/mcc-api/pkg/apis/common/ipam/ipam/l2template/types"
	ipamtypes "github.com/Mirantis/mcc-api/pkg/apis/common/ipam/ipam/types"
	k8sutiltypes "github.com/Mirantis/mcc-api/pkg/apis/util/ipam/k8sutil/types"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in AllocatedIPs) DeepCopyInto(out *AllocatedIPs) {
	{
		in := &in
		*out = make(AllocatedIPs, len(*in))
		copy(*out, *in)
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocatedIPs.
func (in AllocatedIPs) DeepCopy() AllocatedIPs {
	if in == nil {
		return nil
	}
	out := new(AllocatedIPs)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in AllocatedSubnets) DeepCopyInto(out *AllocatedSubnets) {
	{
		in := &in
		*out = make(AllocatedSubnets, len(*in))
		copy(*out, *in)
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocatedSubnets.
func (in AllocatedSubnets) DeepCopy() AllocatedSubnets {
	if in == nil {
		return nil
	}
	out := new(AllocatedSubnets)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPaddr) DeepCopyInto(out *IPaddr) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPaddr.
func (in *IPaddr) DeepCopy() *IPaddr {
	if in == nil {
		return nil
	}
	out := new(IPaddr)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IPaddr) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPaddrList) DeepCopyInto(out *IPaddrList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IPaddr, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPaddrList.
func (in *IPaddrList) DeepCopy() *IPaddrList {
	if in == nil {
		return nil
	}
	out := new(IPaddrList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IPaddrList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPaddrSpec) DeepCopyInto(out *IPaddrSpec) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPaddrSpec.
func (in *IPaddrSpec) DeepCopy() *IPaddrSpec {
	if in == nil {
		return nil
	}
	out := new(IPaddrSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPaddrStatus) DeepCopyInto(out *IPaddrStatus) {
	*out = *in
	if in.Nameservers != nil {
		in, out := &in.Nameservers, &out.Nameservers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]int, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPaddrStatus.
func (in *IPaddrStatus) DeepCopy() *IPaddrStatus {
	if in == nil {
		return nil
	}
	out := new(IPaddrStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpamHost) DeepCopyInto(out *IpamHost) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpamHost.
func (in *IpamHost) DeepCopy() *IpamHost {
	if in == nil {
		return nil
	}
	out := new(IpamHost)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IpamHost) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpamHostList) DeepCopyInto(out *IpamHostList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IpamHost, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpamHostList.
func (in *IpamHostList) DeepCopy() *IpamHostList {
	if in == nil {
		return nil
	}
	out := new(IpamHostList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IpamHostList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpamHostSpec) DeepCopyInto(out *IpamHostSpec) {
	*out = *in
	if in.NicMacMap != nil {
		in, out := &in.NicMacMap, &out.NicMacMap
		*out = make(ipam.NicMacMap, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.L2TemplateSelector != nil {
		in, out := &in.L2TemplateSelector, &out.L2TemplateSelector
		*out = new(ipam.L2TemplateSelector)
		**out = **in
	}
	if in.IfMappingOverride != nil {
		in, out := &in.IfMappingOverride, &out.IfMappingOverride
		*out = make(types.IfMapping, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpamHostSpec.
func (in *IpamHostSpec) DeepCopy() *IpamHostSpec {
	if in == nil {
		return nil
	}
	out := new(IpamHostSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpamHostStatus) DeepCopyInto(out *IpamHostStatus) {
	*out = *in
	if in.NicMacMap != nil {
		in, out := &in.NicMacMap, &out.NicMacMap
		*out = make(ipam.NicMacMap, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetconfigV2 != nil {
		in, out := &in.NetconfigV2, &out.NetconfigV2
		*out = new(cloudinit.UserDataNetworkV2)
		(*in).DeepCopyInto(*out)
	}
	if in.NetconfigFiles != nil {
		in, out := &in.NetconfigFiles, &out.NetconfigFiles
		*out = make(cloudinit.NetconfigFiles, len(*in))
		copy(*out, *in)
	}
	if in.ServiceMap != nil {
		in, out := &in.ServiceMap, &out.ServiceMap
		*out = make(ipamtypes.Services2IfAddressPlan, len(*in))
		for key, val := range *in {
			var outVal []ipamtypes.Services2IfAddressPlanItem
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make(ipamtypes.Services2IfAddressPlanList, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	if in.OSmetadataNetwork != nil {
		in, out := &in.OSmetadataNetwork, &out.OSmetadataNetwork
		*out = new(cloudinit.OSmetadataNetworkConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Warnings != nil {
		in, out := &in.Warnings, &out.Warnings
		*out = make(k8sutiltypes.WarningsList, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpamHostStatus.
func (in *IpamHostStatus) DeepCopy() *IpamHostStatus {
	if in == nil {
		return nil
	}
	out := new(IpamHostStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *L2Template) DeepCopyInto(out *L2Template) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new L2Template.
func (in *L2Template) DeepCopy() *L2Template {
	if in == nil {
		return nil
	}
	out := new(L2Template)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *L2Template) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *L2TemplateList) DeepCopyInto(out *L2TemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]L2Template, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new L2TemplateList.
func (in *L2TemplateList) DeepCopy() *L2TemplateList {
	if in == nil {
		return nil
	}
	out := new(L2TemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *L2TemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *L2TemplateSpec) DeepCopyInto(out *L2TemplateSpec) {
	*out = *in
	if in.L3Layout != nil {
		in, out := &in.L3Layout, &out.L3Layout
		*out = make(types.L3Layout, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IfMapping != nil {
		in, out := &in.IfMapping, &out.IfMapping
		*out = make(types.IfMapping, len(*in))
		copy(*out, *in)
	}
	if in.AutoIfMappingPrio != nil {
		in, out := &in.AutoIfMappingPrio, &out.AutoIfMappingPrio
		*out = make(types.IfMapping, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new L2TemplateSpec.
func (in *L2TemplateSpec) DeepCopy() *L2TemplateSpec {
	if in == nil {
		return nil
	}
	out := new(L2TemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *L2TemplateStatus) DeepCopyInto(out *L2TemplateStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new L2TemplateStatus.
func (in *L2TemplateStatus) DeepCopy() *L2TemplateStatus {
	if in == nil {
		return nil
	}
	out := new(L2TemplateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet) DeepCopyInto(out *Subnet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet.
func (in *Subnet) DeepCopy() *Subnet {
	if in == nil {
		return nil
	}
	out := new(Subnet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Subnet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetList) DeepCopyInto(out *SubnetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Subnet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetList.
func (in *SubnetList) DeepCopy() *SubnetList {
	if in == nil {
		return nil
	}
	out := new(SubnetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubnetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetPool) DeepCopyInto(out *SubnetPool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetPool.
func (in *SubnetPool) DeepCopy() *SubnetPool {
	if in == nil {
		return nil
	}
	out := new(SubnetPool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubnetPool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetPoolList) DeepCopyInto(out *SubnetPoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SubnetPool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetPoolList.
func (in *SubnetPoolList) DeepCopy() *SubnetPoolList {
	if in == nil {
		return nil
	}
	out := new(SubnetPoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubnetPoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetPoolSpec) DeepCopyInto(out *SubnetPoolSpec) {
	*out = *in
	if in.Nameservers != nil {
		in, out := &in.Nameservers, &out.Nameservers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetPoolSpec.
func (in *SubnetPoolSpec) DeepCopy() *SubnetPoolSpec {
	if in == nil {
		return nil
	}
	out := new(SubnetPoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetPoolStatus) DeepCopyInto(out *SubnetPoolStatus) {
	*out = *in
	if in.AllocatedSubnets != nil {
		in, out := &in.AllocatedSubnets, &out.AllocatedSubnets
		*out = make(AllocatedSubnets, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetPoolStatus.
func (in *SubnetPoolStatus) DeepCopy() *SubnetPoolStatus {
	if in == nil {
		return nil
	}
	out := new(SubnetPoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetSpec) DeepCopyInto(out *SubnetSpec) {
	*out = *in
	if in.IncludeRanges != nil {
		in, out := &in.IncludeRanges, &out.IncludeRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExcludeRanges != nil {
		in, out := &in.ExcludeRanges, &out.ExcludeRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Nameservers != nil {
		in, out := &in.Nameservers, &out.Nameservers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetSpec.
func (in *SubnetSpec) DeepCopy() *SubnetSpec {
	if in == nil {
		return nil
	}
	out := new(SubnetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetStatus) DeepCopyInto(out *SubnetStatus) {
	*out = *in
	if in.Nameservers != nil {
		in, out := &in.Nameservers, &out.Nameservers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Ranges != nil {
		in, out := &in.Ranges, &out.Ranges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AllocatedIPs != nil {
		in, out := &in.AllocatedIPs, &out.AllocatedIPs
		*out = make(AllocatedIPs, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetStatus.
func (in *SubnetStatus) DeepCopy() *SubnetStatus {
	if in == nil {
		return nil
	}
	out := new(SubnetStatus)
	in.DeepCopyInto(out)
	return out
}
